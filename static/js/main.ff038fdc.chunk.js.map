{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","cn","TodoList","todos","map","username","getUserById","userById","usersFromServer","find","initialTodos","userId","getNewTodoId","Math","max","App","useState","setTitle","setUserId","setTodos","hasTitleError","setHasTitleError","hasUserId","setHasUserId","handleSubmit","event","preventDefault","data","newTodo","currentTodo","addTodo","random","action","method","onSubmit","type","placeholder","value","onChange","target","disabled","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff038fdc.chunk.js","sourcesContent":["import { User } from '../../types/user';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed === true,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUserById(userById: number) {\n  return usersFromServer.find(user => user.id === userById)\n      || null;\n}\n\nconst initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nfunction getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n}\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserId, setHasUserId] = useState(false);\n\n  const addTodo = ({ id, ...data }: Todo) => {\n    const newTodo = {\n      id: getNewTodoId(todos),\n      ...data,\n    };\n\n    setTodos(currentTodo => [...currentTodo, newTodo]);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserId(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserId(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    const newTodo = {\n      id: Math.random(),\n      title,\n      userId,\n      completed: false,\n      user: getUserById(userId),\n    };\n\n    addTodo(newTodo);\n\n    setTitle('');\n    setUserId(0);\n    setHasTitleError(false);\n    setHasUserId(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n          </label>\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleUserChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          {hasUserId && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={handleSubmit}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}